#!/bin/sh

#########
# USAGE #
#########
# The program always makes normal output first, and visualizes it, unless it
# is specified otherwise
# Parameters:
#   -r      Reachability plot
#   -R      Reachability plot, but don't run the normal algorithm
#   -q      Quality measure
#   -Q      Quality measure, ran over the output file (the output file (.out) should exist!)
#   -t      Time algorithm (cannot be used in combination with -R)
#   -nv     Run visualization, but do not display the image, instead view the output
#   -nl     Run visualization, but do not display the image, do not view the output
#   -no     Do not run a real algorithm.

# functions

message() {
    echo "$@" 1>&2
}

compile() {
    echo "Compiling............."
    # first we remove all *.class files
    rm -r *.class 2> /dev/null
    javac -Xlint:unchecked Main.java algorithm/*.java generator/*.java model/*.java quality/*.java visualize/*.java reachability/*.java
}

run()
{
    export params=""

    if [ $1 ]; then
        if [ $1 = "-r" ]; then
            export params="reach"
            message "Reachability plot....."
        else
            message "Running..............."
            if [ $1 = "allnoise" ]; then
                export params="allnoise"
            fi
        fi
    else
        message "Running..............."
    fi
    java Main $params
}

run_file()
{
    cat $1 | run $2
}

time_run_file()
{
    time run_file $1 $2
}

# now we get to the interesting stuff

# first compile all files
compile

export file=""

export r=""
export R=""
export q=""
export t=""
export nv=""
export nl=""
export params=""

for arg in $@
do
    case $arg in
        -r)
            export r="t"
            ;;
        -R)
            export R="t"
            ;;
        -q)
            export q="t"
            ;;
        -Q)
            export Q="t"
            ;;
        -t)
            export t="t"
            ;;
        -nv)
            export nv="t"
            ;;
        -nl)
            export nl="t"
            ;;
        -no)
            export params="allnoise"
            ;;
        *)
            file=$arg
            ;;
    esac
done


if [ -z $file ]; then
    exit
fi

cat $file | grep "clusters"

if [ "$R" = "t" ]; then
    run_file $file -r | java reachability.Main
    xdg-open reach.png
    exit
fi
if [ "$Q" = "t" ]; then
    cat $file.out | java quality.Main
    exit
fi

# run and visualize
if [ "$t" = "t" ]; then
    time_run_file $file $params | tee $file.out | java visualize.Main
else
    run_file $file $params | tee $file.out | java visualize.Main
fi
if [ "$nv" = "t" ]; then
    less $file.out
else
    if [ "$nl" != "t" ]; then
        xdg-open output.png
    fi
fi

# run and output quality measure
cat $file.out | java quality.Main

# run and plot reachability
if [ "$r" = "t" ]; then
    run_file $file -r | java reachability.Main
    if [ "$nv" != "t" -a "$nl" != "t" ]; then
        xdg-open reach.png
    fi
fi
